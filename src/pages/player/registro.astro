---
import { request } from '../../Api';
import Layout from '../../layouts/Layout.astro';


function parseIntOrNull(params: FormDataEntryValue | null) {
    if (params === null) {
        return null;
    }
    if (typeof params !== "string") {
        return null;
    }
    const number = parseInt(params);
    if (isNaN(number)) {
        return null;
    } 
    return number;
}

const errors = { name: "", list: "", lastName: "", age: "", position: "", shirtNumber: ""};
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const name = data.get("name");
    const list = parseIntOrNull(data.get("list"));
    const lastName = data.get("lastName");
    const age = parseIntOrNull(data.get("age"));
    const position = data.get("position");
    const shirtNumber = parseIntOrNull(data.get("shirtNumber"));
    

    if (typeof name !== "string" || name.length < 1) {
      errors.name += "Please enter a username. ";
    }

    if (typeof list !== "number" || list < 1) {
      errors.list += "Please enter a list. ";
    }
    
    if (typeof lastName !== "string" || lastName.length < 1) {
      errors.lastName += "Please enter a lastName. ";
    }

    if (typeof age !== "number" || age < 10) {
      errors.age += "Please enter a correct age. ";
    }

    if (typeof position !== "string" || position.length < 1) {
      errors.position += "Please enter a position. ";
    }

    if (typeof shirtNumber !== "number" || shirtNumber < 1) {
      errors.shirtNumber += "Please enter a shirtNumber. ";
    }
    
    const hasErrors = Object.values(errors).some(msg => msg)
    if (!hasErrors) {

      await request.post("/players", {
        list,
        name,
        lastName,
        age,
        position,
        shirtNumber
      });
        
      return Astro.redirect("../");
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

---
    <Layout title="Registro Fogoneros">

      <main>
        <nav>
          <span class="text-resp text-[#0833a2]">Registrar nuevo jugador</span>
          <div class="dirButtons">
            <button class="p-1 rounded border-b-slate-300 border text-[#0833a2] font-medium">
              <a href="/">Lista de jugadores</a>
            </button>
            <button class="p-1 rounded border-b-slate-300 border text-[#0833a2] font-medium">
              <a href="/asistencia">Registrar asistencia</a>
            </button>
          </div>
        </nav>
      </main>

      <form method="POST">
        <span>
          <label>
          Nombre: <input type="text" name="name" required />
          </label>
        </span>
        {errors.name && <p>{errors.name}</p>}
        <span>
          <label>
          No. de lista: <input type="number" name="list" required />
          </label>
        </span>
        {errors.list && <p>{errors.list}</p>}
        <span>
          <label>
          Appellido: <input type="text" name="lastName" required minlength="4" />
          </label>
        </span>
        {errors.lastName && <p>{errors.lastName}</p>}
        <span>
          <label>
          Edad: <input type="number" name="age" required minlength="2" />
          </label>
        </span>
        {errors.age && <p>{errors.age}</p>}
        <span>
          <label>
          Posisión: <input type="text" name="position" required />
          </label>
        </span>
        {errors.position && <p>{errors.position}</p>}
        <span>
          <label>
          No. de Jersey: <input type="number" name="shirtNumber" minlength="1" />
          </label>
        </span>
        {errors.shirtNumber && <p>{errors.shirtNumber}</p>}

        <button>Registrar</button>

      </form>

    </Layout>

  <style>
  nav{
    display: flex;
    margin: 0 auto;
    justify-content: space-between;
    align-items: center;
    padding: 0 1rem;
    width: 80%;
    height: 8vh;
    margin-bottom: 2%;
    margin-top: 1%;
  }

  .text-resp {
    font-size: 3rem;
    font-weight: 600;
  }

  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }

  .dirButtons {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    gap: 1rem;
    right: 0;
    bottom: 0%;

  }

  form {
    max-width: 30%;
    margin: 0 auto;
    padding: 20px 50px;
    border: 1px solid #ccc;
    background-color: hsla(0, 0%, 100%, 0.5);
    position: relative;
    display: flex;
    flex-direction: column;
  }

  /* Estilo para los campos de entrada */
  label {
    display: block;
    margin-bottom: 10px;
    font-weight: bold;
    color: #0833a2;
  }

  input[type="text"],
  input[type="number"] {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    color: black;
    font-weight: 500;
    border-bottom: 2px solid #ccc;
    background-color: hsla(0, 0%, 100%, 0.5);
  }

  /* Estilo para los mensajes de error */
  p {
    color: #ff0000;
    margin-top: -10px;
    margin-bottom: 15px;
  }

  /* Estilo para el botón */
  form  button {
    background-color: #0833a2;
    color: #fff;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    position: relative;
    width: 80%;
    margin: 0 auto;
  }

  form > button:hover {
    background-color: #07287c;
  }

</style>